## Add git completion
if which -s brew; then
  [ ! -f `brew --prefix`/etc/bash_completion.d/git-completion.bash ] || . `brew --prefix`/etc/bash_completion.d/git-completion.bash
fi

## Add Rails completion
if [ -f `brew --prefix`/etc/bash_completion.d/rails.bash ]; then
    source `brew --prefix`/etc/bash_completion.d/rails.bash
fi

## Add Rails completion
if [ -f `brew --prefix`/etc/bash_completion.d/rails ]; then
    source `brew --prefix`/etc/bash_completion.d/rails
fi

## Add Docker completion
if [ -f `brew --prefix`/etc/bash_completion.d/docker ]; then
    source `brew --prefix`/etc/bash_completion.d/docker
fi

## Add asdf completion
if [ -f `brew --prefix`/etc/bash_completion.d/asdf.bash ]; then
    source `brew --prefix`/etc/bash_completion.d/asdf.bash
fi

## Add git completion
if [ -f `brew --prefix`/etc/bash_completion.d/git-completion.bash ]; then
    source `brew --prefix`/etc/bash_completion.d/git-completion.bash
fi

if [ -f `brew --prefix`/etc/bash_completion.d/git-prompt.sh ]; then
    source `brew --prefix`/etc/bash_completion.d/git-prompt.sh
fi

## Add hub completion
if [ -f `brew --prefix`/etc/bash_completion.d/hub.bash_completion.sh ]; then
    source `brew --prefix`/etc/bash_completion.d/hub.bash_completion.sh
fi

## Add npm completion
[[ `which npm` ]] && eval "$(npm completion -)"

if [ -f $(brew --prefix)/etc/bash_completion ]; then
  . $(brew --prefix)/etc/bash_completion
fi

## Add gh completion
[[ `which gh` ]] && eval "$(gh completion -s bash)"
#
## Add graphite completion
[[ `which gt` ]] && eval "$(gt completion -s bash)"

[ -f ~/.fzf.bash ] && source ~/.fzf.bash

_gt_yargs_completions()
{
    local cur_word args type_list

    cur_word="${COMP_WORDS[COMP_CWORD]}"
    args=("${COMP_WORDS[@]}")

    # ask yargs to generate completions.
    type_list=$($(which gt) --get-yargs-completions "${args[@]}")

    COMPREPLY=( $(compgen -W "${type_list}" -- ${cur_word}) )

    # if no match was found, fall back to filename completion
    if [ ${#COMPREPLY[@]} -eq 0 ]; then
      COMPREPLY=()
    fi

    return 0
}

complete -o bashdefault -o default -F _gt_yargs_completions gt
